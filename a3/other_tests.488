{

% rest of the general testing for combining things together

var a,h[5] : integer
var b,c,d,e[10],f[1..2], g[1,1..5] : boolean

forward func f (a:integer) : integer 
forward proc p2 (i : integer)

func f (a:integer) : integer {
    result 1
}
func f2 () : integer {}
func f3 (a:integer,b:integer) : integer {
    b := a+1
    cc := b+1 % should report error for missing result stmt?
}
func f (aa:integer) : integer {
	result aa + 1
}

proc p (a:integer) {
    return
}
proc p2 () {}
proc p3 (a:integer,b:boolean) {
	if 1 then
		{}
	else 
		{}
	fi
}

if (1<2 or 3>4) then
{}
fi

while ((1+2)=(3+5)) do {
    if 1 then
	{exit} % need fix
    else 
	{exit when 1}
    fi
} end

repeat {} until 1

aaa := 12
aaa[1] := 1
aaa[2,3] := 2

get a
get a, b, c, h[1]

put 1
put "qwe"
put newline
put 1, "df", newline, b

p2()
p(1)
p3(1,2,3,4,5)
x := f2()

}
