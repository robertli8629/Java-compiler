{ 
  var a:integer
  var ans:integer
  var retval : integer

  func nested_exits() : integer {
    var i, j, k, l : integer
    i := 0
    j := 0
    k := 0
    l := 0
    while true do
      if i < 10 then {
        i := i + 1
        repeat
          if j < 11 then {
            j := j + 1
            while not false do
              if k < 12 then {
                k := k + 1
                repeat
                  if l < 13 then
                    l := l + 1
                  else
                    exit
                  fi
                until false
              } else
                exit
              fi
            end 
          } else
            exit
          fi
        until false
      } else
        exit
      fi
    end 
    put "Expected: 10 11 12 13", newline
    put "Result: ", i, " ", j, " ", k, " ", l, newline, newline
    result i + j + k + l
  }
  
  ans:=0
  a:=1
  while(true)
  do
    {
    ans:=ans+a
    a:=a+1
    if a=101
    then
    {
	  exit
      ans := 0    % should jump this
    }
    fi
    }
  end
  
  if (ans = 5050) then{
    put "result:1"
  } else {
    put "result:0"
  }
  fi

  put newline, "Expected: 5050, 101", newline
  put "Result: ", ans, " ", a, newline, newline

  retval := nested_exits()
  put "Expected: 46", newline
  put "Result: ", retval, newline
} 

